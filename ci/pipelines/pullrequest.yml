---

#-----------------------------------------------------------------------------------------------------------------------
# Resource Types
#-----------------------------------------------------------------------------------------------------------------------
resource_types:

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

- name: github-release
  type: docker-image
  source:
    repository: quay.io/hellofresh/gh-status-dynamic

#-----------------------------------------------------------------------------------------------------------------------
# Resources
#-----------------------------------------------------------------------------------------------------------------------
resources:

- name: source-code
  type: pull-request
  source:
    uri: {{github_repository_uri}}
    repo: {{github_pr_repository}}
    access_token: {{github_access_token}}

- name: dev-build
  type: github-release
  source:
    user: {{github_organization}}
    repository: {{github_repository}}
    access_token: {{github_access_token}}
    pre_release: true

- name: version
  type: semver
  source:
    driver: git
    initial_version: 0.0.0-rc.1
    uri: {{github_repository_uri}}
    branch: version
    file: version

#-----------------------------------------------------------------------------------------------------------------------
# Jobs
#-----------------------------------------------------------------------------------------------------------------------
jobs:

- name: run-unit-tests
  public: false
  serial: true
  plan:

  # Trigger unit tests when a PR is submitted
  - get: source-code
    trigger: true

  # Set the unit test github status for this PR to pending
  - put: source-code
    params:
      path: source-code
      context: unit-tests
      status: pending

  # Run unit tests
  - task: unit-tests
    file: source-code/ci/tasks/run-unit-tests.yml
    params:
        PROJECT_SRC: {{project_src}}

    # If successful, set the unit test github status for this PR to success
    on_success:
      put: source-code
      params:
        path: source-code
        context: unit-tests
        status: success

    # If unsuccessful, set the unit test github status for this PR to unsuccessful
    on_failure:
      put: source-code
      params:
        path: source-code
        context: unit-tests
        status: failure

# Create Dev Build
#-----------------------------------------------------------------------------------------------------------------------
- name: create-dev-build
  public: false
  serial: true
  plan:

  # Trigger build on master update
  - get: source-code
    trigger: true
    passed: [run-unit-tests]

  - get: version

  # Create a release artifact
  - task: create-artifact
    file: source-code/ci/tasks/create-artifact.yml
    params:
      PROJECT_SRC: {{project_src}}

  - task: create-deb
    file: source-code/ci/tasks/create-deb.yml

  # Upload a dev build to GitHub
  - put: dev-build
    params:
      name: version/version
      tag: version/version
      globs:
      - artifacts/*.tar.gz
      - packages/*.deb

  # Bump the dev version
  - put: version
    params:
      pre: 'dev'
